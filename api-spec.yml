openapi: 3.0.3
info:
    description: RevUnit Takehome Assignment
    version: 1.0.0
    title: RevUnit Takehome Assignment
    contact:
        name: Samuel Morgan
        email: samemorgan@gmail.com
servers:
    - url: http://localhost:3000
      description: Local
tags:
    - name: customer
      description: Customer endpoints
paths:
    /customer:
        post:
            tags:
                - customer
            summary: Create new customer
            description: Create new customer
            requestBody:
                description: Required input.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#components/schemas/CustomerBody'
            responses:
                201:
                    description: Created
                400:
                    description: Bad request. Must provide all customer details.
                401: 
                    description: Unauthorized.
                500:
                    description: Unexpected error.
    /customers:
        get:
            tags:
                - customer
            summary: Returns full list of customers.
            description: Returns full list of customers.
            parameters:
                - in: query
                  name: limit
                  schema:
                      type: number
                      format: int32
                - in: query
                  name: offset
                  schema:
                      type: number
                      format: int32
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    customers:
                                        type: array
                                        items:
                                            $ref: '#components/schemas/Customer'
                                    pagination:
                                        type: object
                                        properties:
                                            currentOffset:
                                                type: number
                                                format: int32
                                            count:
                                                type: number
                                                format: int32
                401:
                    description: Unauthorized.
                500:
                    description: Unexpected error.
    /customer/{customerId}:
        get:
            tags:
                - customer
            summary: Find customer by ID.
            description: Find customer by ID.
            parameters:
                - in: path
                  name: customerId
                  schema:
                      type: string
                      format: uuid
                  required: true
                  allowEmptyValue: false
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#components/schemas/Customer'
                400:
                    description: Bad request. Customer ID must be present.
                401:
                    description: Unauthorized.
                404:
                    description: A customer with that ID was not found.
                500:
                    description: Unexpected error.
components:
    schemas:
        CustomerBody:
            description: Customer body
            type: object
            required:
                - 'firstName'
                - 'lastName'
                - 'address1'
                - 'address2'
                - 'city'
                - 'state'
                - 'postalCode'
                - 'dateOfBirth'
                - 'email'
                - 'phone'
            properties:
                firstName:
                    type: string
                lastName:
                    type: string
                address1:
                    type: string
                address2:
                    type: string
                city:
                    type: string
                state:
                    type: string
                postalCode:
                    type: string
                dateOfBirth:
                    type: string
                    format: date
                email:
                    type: string
                    format: email
                phone:
                    type: string
                    format: phone
        Customer:
            description: Customer response object
            allOf:
                - $ref: '#components/schemas/CustomerBody'
                - type: object
                  properties:
                      id:
                          type: string
                          format: uuid
    securitySchemes:
        apiKey:
            type: apiKey
            in: header
            name: apiKey
            description: API key used for authentication
security:
    - apiKey: []
